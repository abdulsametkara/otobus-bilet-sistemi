// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using OtobusBiletSistemi.Core.Data;

#nullable disable

namespace OtobusBiletSistemi.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250701080057_RemoveBiletFiyatColumn")]
    partial class RemoveBiletFiyatColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONCURRENCYSTAMP");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NAME");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NORMALIZEDNAME");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NORMALIZEDNAME\" IS NOT NULL");

                    b.ToTable("ASPNET_ROLES", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CLAIMTYPE");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CLAIMVALUE");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ASPNET_ROLE_CLAIMS", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CLAIMTYPE");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CLAIMVALUE");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ASPNET_USER_CLAIMS", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("LOGINPROVIDER");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("PROVIDERKEY");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PROVIDERDISPLAYNAME");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("ASPNET_USER_LOGINS", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ASPNET_USER_ROLES", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("LOGINPROVIDER");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("NAME");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VALUE");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("ASPNET_USER_TOKENS", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Data.YolcuUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YOLCUID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ACCESSFAILEDCOUNT");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AD");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONCURRENCYSTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("EmailConfirmed")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EMAILCONFIRMED");

                    b.Property<int>("LockoutEnabled")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LOCKOUTENABLED");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE")
                        .HasColumnName("LOCKOUTEND");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NORMALIZEDEMAIL");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NORMALIZEDUSERNAME");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PASSWORDHASH");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SECURITYSTAMP");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SOYAD");

                    b.Property<string>("TCNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TCNO");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TELNO");

                    b.Property<int>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TWOFACTORENABLED");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NORMALIZEDUSERNAME\" IS NOT NULL");

                    b.ToTable("YOLCU", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Bilet", b =>
                {
                    b.Property<int>("BiletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BILETID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BiletID"));

                    b.Property<string>("BiletDurumu")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BILETDURUMU");

                    b.Property<DateTime?>("BiletTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BILETTARIHI");

                    b.Property<int>("KoltukID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KOLTUKID");

                    b.Property<int?>("OdemeID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ODEMEID");

                    b.Property<int>("SeferID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEFERID");

                    b.Property<int>("YolcuID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YOLCUID");

                    b.HasKey("BiletID");

                    b.HasIndex("KoltukID");

                    b.HasIndex("OdemeID");

                    b.HasIndex("SeferID");

                    b.HasIndex("YolcuID");

                    b.ToTable("BILET", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Guzergah", b =>
                {
                    b.Property<int>("GuzergahID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GUZERGAHID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuzergahID"));

                    b.Property<int>("Mesafe")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MESAFE");

                    b.Property<string>("Nereden")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NEREDEN");

                    b.Property<string>("Nereye")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NEREYE");

                    b.HasKey("GuzergahID");

                    b.ToTable("GUZERGAH", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Koltuk", b =>
                {
                    b.Property<int>("KoltukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KOLTUKID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KoltukID"));

                    b.Property<string>("KoltukNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KOLTUKNO");

                    b.Property<int>("OtobusID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("OTOBUSID");

                    b.HasKey("KoltukID");

                    b.ToTable("KOLTUK", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Odeme", b =>
                {
                    b.Property<int>("OdemeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ODEMEID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeID"));

                    b.Property<int>("BiletSayisi")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("BILETSAYISI");

                    b.Property<string>("KartNumarasi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KARTNUMARASI");

                    b.Property<string>("KartSahibiAdi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KARTSAHIBIADI");

                    b.Property<string>("OdemeDurumu")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ONAYDURUMU");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ODEMETARIHI");

                    b.Property<decimal>("OdemeTutari")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("TOPLAMTUTAR");

                    b.Property<string>("OdemeYontemi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ODEMETIPI");

                    b.Property<int>("YolcuID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YOLCUID");

                    b.HasKey("OdemeID");

                    b.ToTable("ODEME", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Otobus", b =>
                {
                    b.Property<int>("OtobusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("OTOBUSID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OtobusID"));

                    b.Property<int>("KoltukSayısı")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("KOLTUKSAYISI");

                    b.Property<string>("OtobusTipi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OTOBUSTIPI");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PLAKA");

                    b.HasKey("OtobusID");

                    b.ToTable("OTOBUS", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Sefer", b =>
                {
                    b.Property<int>("SeferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEFERID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeferID"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("NUMBER(10,2)")
                        .HasColumnName("FIYAT");

                    b.Property<int>("GuzergahID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("GUZERGAHID");

                    b.Property<string>("Kalkis")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("KALKMATERMINALI");

                    b.Property<int>("OtobusID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("OTOBUSID");

                    b.Property<string>("Saat")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SAAT");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TARIH");

                    b.Property<string>("Varis")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VARISTERMINALI");

                    b.HasKey("SeferID");

                    b.HasIndex("GuzergahID");

                    b.HasIndex("OtobusID");

                    b.ToTable("SEFER", (string)null);
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Yolcu", b =>
                {
                    b.Property<int>("YolcuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YolcuID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TCNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TelNo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("YolcuID");

                    b.ToTable("Yolcu");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("OtobusBiletSistemi.Core.Data.YolcuUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("OtobusBiletSistemi.Core.Data.YolcuUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletSistemi.Core.Data.YolcuUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("OtobusBiletSistemi.Core.Data.YolcuUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Bilet", b =>
                {
                    b.HasOne("OtobusBiletSistemi.Core.Entities.Koltuk", "Koltuk")
                        .WithMany()
                        .HasForeignKey("KoltukID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletSistemi.Core.Entities.Odeme", "Odeme")
                        .WithMany()
                        .HasForeignKey("OdemeID");

                    b.HasOne("OtobusBiletSistemi.Core.Entities.Sefer", "Sefer")
                        .WithMany("Biletler")
                        .HasForeignKey("SeferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletSistemi.Core.Entities.Yolcu", "Yolcu")
                        .WithMany()
                        .HasForeignKey("YolcuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Koltuk");

                    b.Navigation("Odeme");

                    b.Navigation("Sefer");

                    b.Navigation("Yolcu");
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Sefer", b =>
                {
                    b.HasOne("OtobusBiletSistemi.Core.Entities.Guzergah", "Guzergah")
                        .WithMany()
                        .HasForeignKey("GuzergahID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OtobusBiletSistemi.Core.Entities.Otobus", "Otobus")
                        .WithMany()
                        .HasForeignKey("OtobusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guzergah");

                    b.Navigation("Otobus");
                });

            modelBuilder.Entity("OtobusBiletSistemi.Core.Entities.Sefer", b =>
                {
                    b.Navigation("Biletler");
                });
#pragma warning restore 612, 618
        }
    }
}
